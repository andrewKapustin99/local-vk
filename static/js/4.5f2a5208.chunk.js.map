{"version":3,"sources":["componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogItem/DialogItem.js","componets/Dialogs/Message/Message.js","componets/Dialogs/Dialogs.js","componets/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","activeClassName","classes","active","className","dialog","to","src","photo","DialogItemPhoto","dialogItemInfo","name","Message","message","maxLength1000","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","writeMessage","writeMessageWrapp","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","dialogElements","messagesPage","dialogs","map","d","messageElements","messages","m","isAuth","dialogsItem","massagesBlock","massagesBlockWrapp","messageHeader","messageBody","values","sendMessage","newMessageBody","compose","connect","state","withAuthRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,gBAAkB,iCAAiC,eAAiB,gCAAgC,cAAgB,+BAA+B,mBAAqB,oCAAoC,cAAgB,+BAA+B,YAAc,6BAA6B,aAAe,8BAA8B,kBAAoB,mCAAmC,QAAU,2B,kFCmBtgBC,EAfI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,eAAC,IAAD,CAASC,gBAAiBC,IAAQC,OAAQC,UAAWF,IAAQG,OAAQC,GAAIP,EAAzE,UACI,qBAAKQ,IAAKT,EAAMU,MAAOJ,UAAWF,IAAQO,kBAC1C,sBAAKL,UAAWF,IAAQQ,eAAxB,UACI,6BACKZ,EAAMa,OAEX,6DCJDC,EANC,SAACd,GACb,OACI,qBAAKM,UAAWF,IAAQW,QAAxB,SAAkCf,EAAMe,W,gDCM1CC,EAAgBC,YAAiB,KAwBjCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAtBL,SAACnB,GACpB,OACI,sBAAMqB,SAAUrB,EAAMsB,aAAchB,UAAWF,IAAQmB,aAAvD,SACI,sBAAKjB,UAAWF,IAAQoB,kBAAxB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAaC,IACbd,KAAM,iBACNe,YAAa,mIACbC,SAAU,CAACC,IAAed,OAIlC,8BACI,sGAuDLe,EA7CC,SAAC/B,GAEb,IAAIgC,EAAiBhC,EAAMiC,aAAaC,QAAQC,KAAI,SAACC,GACjD,OAAO,cAAC,EAAD,CAAuBvB,KAAMuB,EAAEvB,KAAMX,GAAIkC,EAAElC,GAAIQ,MAAO0B,EAAE1B,OAAvC0B,EAAElC,OAE1BmC,EAAkBrC,EAAMiC,aAAaK,SAASH,KAAI,SAACI,GACnD,OAAO,cAAC,EAAD,CAAoBxB,QAASwB,EAAExB,SAAjBwB,EAAErC,OAO3B,OAAKF,EAAMwC,OAGP,sBAAKlC,UAAWF,IAAQ8B,QAAxB,UACI,qBAAK5B,UAAWF,IAAQqC,YAAxB,SACKT,IAGL,qBAAK1B,UAAWF,IAAQsC,cAAxB,SAEI,sBAAKpC,UAAWF,IAAQuC,mBAAxB,UACI,qBAAKrC,UAAWF,IAAQwC,cAAxB,SACI,wBAGJ,qBAAKtC,UAAWF,IAAQyC,YAAxB,SACKR,IAGL,qBAAK/B,UAAWF,IAAQmB,aAAxB,SACI,qBAAKjB,UAAWF,IAAQoB,kBAAxB,SACI,cAACN,EAAD,CAAqBG,SAzBzB,SAACyB,GACjB9C,EAAM+C,YAAYD,EAAOE,+BAGH,cAAC,IAAD,CAAUxC,GAAI,Y,kCClC7ByC,sBACXC,aATkB,SAACC,GACnB,MAAO,CACHlB,aAAckB,EAAMlB,gBAOC,CAAEc,kBAC3BK,IAFWH,CAGblB","file":"static/js/4.5f2a5208.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2lgzx\",\"dialogsItem\":\"Dialogs_dialogsItem__2TqKp\",\"dialog\":\"Dialogs_dialog__AfrGz\",\"DialogItemPhoto\":\"Dialogs_DialogItemPhoto__2FksB\",\"dialogItemInfo\":\"Dialogs_dialogItemInfo__Vr_dg\",\"massagesBlock\":\"Dialogs_massagesBlock__1XEfk\",\"massagesBlockWrapp\":\"Dialogs_massagesBlockWrapp__1BJrF\",\"messageHeader\":\"Dialogs_messageHeader__1mOw_\",\"messageBody\":\"Dialogs_messageBody__29sAC\",\"writeMessage\":\"Dialogs_writeMessage__2il_Y\",\"writeMessageWrapp\":\"Dialogs_writeMessageWrapp__Ri_wa\",\"sendBtn\":\"Dialogs_sendBtn__2KuY9\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from '../Dialogs.module.css';\n\n\nconst DialogItem = (props) => {\n    let path = `/dialogs/${props.id}`\n    return (\n        <NavLink activeClassName={classes.active} className={classes.dialog} to={path} >\n            <img src={props.photo} className={classes.DialogItemPhoto} />\n            <div className={classes.dialogItemInfo}>\n                <h4>\n                    {props.name}\n                </h4>\n                <p>lorem lorem lorem ...</p>\n            </div>\n        </NavLink>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport classes from '../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Redirect } from 'react-router';\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../Common/FormsControls/FormsControls';\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\"\n\n\nconst maxLength1000 = maxLengthCreator(1000)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={classes.writeMessage}>\n            <div className={classes.writeMessageWrapp}>\n                <div>\n                    <Field\n                        component = {Textarea} \n                        name={'newMessageBody'}\n                        placeholder={'Введите новое сообщение'}\n                        validate={[requiredField, maxLength1000]}\n                    />\n                </div>\n\n                <div>\n                    <button>Отправить</button>\n                </div>\n\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n\nconst Dialogs = (props) => {\n\n    let dialogElements = props.messagesPage.dialogs.map((d) => {\n        return <DialogItem key={d.id} name={d.name} id={d.id} photo={d.photo} />\n    });\n    let messageElements = props.messagesPage.messages.map((m) => {\n        return <Message key={m.id} message={m.message} />\n    });\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItem}>\n                {dialogElements}\n            </div>\n\n            <div className={classes.massagesBlock}>\n\n                <div className={classes.massagesBlockWrapp}>\n                    <div className={classes.messageHeader}>\n                        <p></p>\n                    </div>\n\n                    <div className={classes.messageBody}>\n                        {messageElements}\n                    </div>\n\n                    <div className={classes.writeMessage}>\n                        <div className={classes.writeMessageWrapp}>\n                            <AddMessageReduxForm onSubmit={addNewMessage} />\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Dialogs;","import React from 'react';\nimport Dialogs from './Dialogs';\nimport { sendMessage } from '../../redux/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n// данные из state \nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\n// 1) Компанента Dialogs попадает как аргементв в функцию withAuthRedirect\n// 2) результат 1 действия поместить ка крагемент в функцию connect(mapStateToProps, masDispatchToProps)\nexport default compose(\n    connect(mapStateToProps, { sendMessage }),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}