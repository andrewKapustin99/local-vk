{"version":3,"sources":["componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/Profile.module.css","componets/Profile/MyPosts/Post/Post.module.css","componets/Profile/ProfileInfo/ProfileStatusWithHooks.js","componets/Profile/ProfileInfo/ProfileInfo.js","assets/images/Wa4vBSHaZI4(1).jpg","componets/Profile/MyPosts/Post/Post.js","componets/Profile/MyPosts/MyPosts.js","componets/Profile/MyPosts/MyPostsContainer.js","componets/Profile/Profile.js","componets/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","classes","profile_info_wrap","img_wrap","photos","large","src","basicPhoto","info_wrap","infoItem","fullName","lookingForAJob","infoJob","socialNet","Preloader","Post","item","userPhoto","message","likesCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","MyPosts","postElemetns","posts","map","element","postContent","id","values","addPost","newPostText","compose","connect","state","profilePage","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","React","Component","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.801b77a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"front-layout\":\"ProfileInfo_front-layout__3nM83\",\"profile_info_wrap\":\"ProfileInfo_profile_info_wrap__2l_oQ\",\"img_wrap\":\"ProfileInfo_img_wrap__5CXTK\",\"info_wrap\":\"ProfileInfo_info_wrap__1tz5I\",\"infoItem\":\"ProfileInfo_infoItem__3t8Od\",\"infoJob\":\"ProfileInfo_infoJob__15o6z\",\"socialNet\":\"ProfileInfo_socialNet__3n8f1\",\"logo_wrap\":\"ProfileInfo_logo_wrap__ZCDR-\",\"logoIcon\":\"ProfileInfo_logoIcon__2lbeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"front-layout\":\"Profile_front-layout__3x9Je\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ngDyW\"};","import React, { useEffect, useState } from \"react\"\nimport Preloader from \"../../Common/Preloader/Preloader\"\nimport classes from './ProfileInfo.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    // закинуть функцию которая выполнится когда произойдет отрисовка\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return (\n        <div>\n            { !editMode \n                ?<div>\n                    <span onDoubleClick={ activateEditMode }>{status || \"No Status\"}</span>\n                </div>\n                :<div>\n                    <input \n                        autoFocus={true} \n                        onChange={ onStatusChange } \n                        onBlur={ deactivateEditMode } \n                        value={status} \n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks\n\n// setState - асинхронная операция\n","import React from \"react\"\nimport Preloader from \"../../Common/Preloader/Preloader\"\nimport classes from './ProfileInfo.module.css'\nimport basicPhoto from '../../../assets/images/user.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\n\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n    \n    \n    if(!profile) {\n        return <Preloader/>\n    } else {\n        \n\n        return (\n            <div>\n            \n                <div className={classes.profile_info_wrap}>\n\n                    <div className={classes.img_wrap}>\n                        { profile.photos.large\n                        ? <img src={profile.photos.large} /> \n                        : <img src={basicPhoto} /> }\n                    </div>\n\n                    <div className={classes.info_wrap}>\n                        <div className={classes.infoItem}>\n                            <h3>{profile.fullName}</h3>\n                            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n                        </div>\n\n                        { profile.lookingForAJob ? <div className={classes.infoJob}>\n                            <span>Looking for a job</span>\n                            <span>status 2</span>\n                        </div> : null }\n                        \n                        <div className={classes.socialNet}>\n                            social networks\n                            {/* <div className={classes.logo_wrap}>\n                                <a href={'https://'+profile.contacts.instagram}>\n                                    <FontAwesomeIcon icon={faFacebookF} className={classes.logoIcon}/>\n                                </a>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileInfo","export default __webpack_public_path__ + \"static/media/Wa4vBSHaZI4(1).a6a8223e.jpg\";","import React from \"react\"\nimport classes from './Post.module.css'\nimport userPhoto from '../../../../assets/images/Wa4vBSHaZI4(1).jpg'\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            {/*  */}\n            \n            <img src={userPhoto}></img>\n            {/*  */}\n            <p>{props.message}</p>\n            <div>\n                <span>Like {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React from \"react\"\nimport classes from './MyPosts.module.css'\nimport { Field, reduxForm } from 'redux-form'\nimport Post from './Post/Post'\nimport { maxLengthCreator, requiredField } from \"../../../utils/validators/validators\"\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\"\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component = {Textarea}\n                    name={'newPostText'}\n                    placeholder={'Расскажите что у вас происходит ...'}\n                    validate={[requiredField, maxLength10]}\n                />\n            </div>\n\n            <div>\n                <button>Отправить</button>\n            </div>\n\n        </form>\n    )\n}\n\nconst AddPostReduxForm = reduxForm({ form: 'profileAddPostForm' })(AddNewPostForm)\n\n\nconst MyPosts = (props) => {\n\n    let postElemetns = props.posts.map((element) => {\n        return <Post message={element.postContent} likesCount={element.likesCount} key={element.id} />\n    })\n\n    let addNewPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div>\n            My posts\n            <div>\n                {/* <textarea onChange={onPostChange} value={props.newPostText}/>\n                <button onClick={ onAddPost }>Add Post</button> */}\n                <AddPostReduxForm onSubmit={addNewPost} />\n            </div>\n            <div className={classes.posts}>\n                {postElemetns}\n            </div>\n        </div>\n    )\n}\n\n\nexport default MyPosts","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { addPost } from '../../../redux/profile-reducer'\nimport MyPosts from \"./MyPosts\"\n\n\n// конетенерная компонента - обертка для обычной компоненты\n\nlet mapStateToProps = state => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {addPost})\n)(MyPosts)\n","import React from \"react\"\nimport classes from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from 'react-redux';\nimport { getProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\nimport { withRouter } from \"react-router\";\nimport { compose } from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    \n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if(!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n    render() {\n        return (\n            <Profile {...this.props}\n                profile={this.props.profile} \n                status={this.props.status} \n                updateStatus={this.props.updateStatus} />\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer)\n"],"sourceRoot":""}